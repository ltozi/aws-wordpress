name: Deploy WordPress Version

on:
  push:
    branches:
      - main
  release:
    types: [ published, edited ]


env:
  TF_VERSION: '1.10.4'
  AWS_REGION: 'eu-south-1'

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: dev

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
#          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-duration-seconds: 900
          role-skip-session-tagging: true

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Init
        if: github.event_name == 'release'
        run: |
          terraform init \
            -backend-config="bucket=${{ vars.TF_STATE_BUCKET }}" \
            -backend-config="key=wordpress" \
            -backend-config="region=${{ env.AWS_REGION }}"

      - name: Get and Strip 'v' from Release Tag
        id: get_release_tag
        if: github.event_name == 'release'
        run: |
          RELEASE_TAG="${{ github.event.release.tag_name }}"
          TAG="${TAG_WITH_V#v}"
          echo "Releasing version: ${TAG}"
          
          # Regex to validate the tag format (e.g., x.y.z, x.y.z-rc.1, etc.)
          if [[ ! "${TAG#v}" =~ ^([0-9]+)\.([0-9]+)\.([0-9]+)(-[a-zA-Z0-9]+(\.[0-9]+)?)?$ ]]; then
            echo "::error::Invalid tag format: ${TAG}. Expected format: x.y.z or x.y.z-prerelease.n"
            exit 1 # Fail the workflow
          fi
          
          terraform apply --target=aws_ecs_service.wordpress --var=wordpress_version=${TAG} --auto-approve